language: cpp
os: linux
sudo: required
services:
  - docker

if: tag IS blank

matrix:
  include:
  # Clang 7
  - compiler: clang
    env: DIST=ubuntu:18.04 INSTALL='clang-7 libc++-7-dev libc++abi-7-dev' BJAM_COMPILER=clang
  # GCC 7
  - compiler: gcc
    env: DIST=ubuntu:18.04 INSTALL=g++ BJAM_COMPILER=gcc

before_install:
  - |
    PATTERN="s/g++/$INSTALL/;s/gcc/$BJAM_COMPILER/g"
    echo "$PATTERN"
    sed "$PATTERN" Dockerfile > $BJAM_COMPILER.dockerfile
    if [ "$BJAM_COMPILER" = clang ]; then
      wget -O llvm-snapshot.gpg.key https://apt.llvm.org/llvm-snapshot.gpg.key
      sed -i \
        -e '4iRUN apt-get -qq update\nRUN apt-get install -y gnupg\nCOPY llvm-snapshot.gpg.key .\nRUN apt-key add llvm-snapshot.gpg.key' \
        -e '/mkdir/iRUN sed -i -e "s/__GLIBC__) || defined(//" /usr/include/c++/v1/__locale' \
        -e 's/^# clang: //' \
        $BJAM_COMPILER.dockerfile
      echo -e 'using clang : : clang++-7 : <cxxflags>-fdiagnostics-color=always <cxxflags>-stdlib=libc++ <cxxflags>-Wunused-command-line-argument <linkflags>-stdlib=libc++ ;' > project-config.jam
    else
      echo -e 'using gcc : : g++-7 : <cxxflags>-fdiagnostics-color=always ;' > project-config.jam
    fi
    cat $BJAM_COMPILER.dockerfile
    cat project-config.jam
    # docker pull $DIST
    docker build -t $BJAM_COMPILER -f $BJAM_COMPILER.dockerfile .

script:
  - |
    docker run $BJAM_COMPILER sh -c '$@' u rm -rf src tests include modules
    docker cp src $BJAM_COMPILER:/redemption/
    docker cp tests $BJAM_COMPILER:/redemption/
    docker cp include $BJAM_COMPILER:/redemption/
    docker cp modules $BJAM_COMPILER:/redemption/
    docker run $BJAM_COMPILER sh -c '$@' compile \
        bjam -aq --toolset=$BJAM_COMPILER rdpproxy \
        cxxflags=-DREDEMPTION_DISABLE_NO_BOOST_PREPROCESSOR_WARNING

# branches:
#   except:
#     - /^[0-9]/

notifications:
  email:
    recipients:
      - jpoelen@wallix.com
      - rzhou@wallix.com
      - cgrosjean@wallix.com
      #- cmoroldo@wallix.com
      #- mtan@wallix.com
    on_success: change
    on_failure: always
